/* 
This is the CSS for the flexbox (Agastya Oruganti Week 4 lab)
*/ 

/*
 Setting all the elements in the page to use the border box model. Note: here the * is to choose every element.
 The *after and *before are elements that CSS can add either before or after an element's content.
*/
*, *::after, *::before 
{
	box-sizing: border-box;
}

/*
	box contains all the elements that need to be wrapped into the flexbox model.
*/
.box 
{

	/*
        Setting the display to be flexbox mode and adding support to it.	
    */
	display: -webkit-flex; /* Webkit browser support */
	display: -ms-flex; /* IE 10 support */
	display: flex; /* Display Mode */

	/*
        Adding flex wrap to the elements in the flex box as by default it would wrap everything onto one line. Also adding other support for the feature. 
	*/
	-webkit-flex-wrap: wrap;
	-ms-flex-wrap: wrap;
	flex-wrap: wrap; /* items will wrap onto multiple lines from top to bottom */

	text-align: center;
	align-items: center;

	
	/*
        Justify content allows allignment along the main axis. 
	*/
	-webkit-justify-content: center;
	-ms-justify-content: center;
	justify-content: center;  /* items are placed with even space around them  */

}

/*
	defining the image elements to have flex properties.
*/
.box-item-image 
{
	/*
        Flex properties for the image; setting the basis in pixel values and setting the grow as 3 for the image to increase in size as neccesary 
	*/
	-webkit-flex: 3 1 200px;
	-ms-flex: 3 1 200px;
	flex: 3 1 200px;
	max-width: 40%;
	max-height: 40%;
	-webkit-order: 1;
	-ms-order: 1;
	order: 1;
}

/*
	defining the text elements to have flex properties.
*/
.box-item-text 
{
	/*
        Flex properties for the text behavior, basis is set em values and grow is 1 to have the text smaller than the image.
	*/
	-webkit-flex: 1 1 18em;
	-ms-flex: 1 1 18em;
	flex: 1 1 18em;
	padding: 0 1rem;
	align-items: center;
	-webkit-order: 2;
	-ms-order: 2;
	order: 2;
}

.box-item-image2
{
	/*
        Flex properties for the image; setting the basis in pixel values and setting the grow as 3 for the image to increase in size as neccesary 
	*/
	-webkit-flex: 3 1 200px;
	-ms-flex: 3 1 200px;
	flex: 3 1 200px;
	max-width: 40%;
	max-height: 40%;
	-webkit-order: 2;
	-ms-order: 2;
	order: 2;
}

/*
	defining the text elements to have flex properties.
*/
.box-item-text2
{
	/*
        Flex properties for the text behavior, basis is set em values and grow is 1 to have the text smaller than the image.
	*/
	-webkit-flex: 1 1 18em;
	-ms-flex: 1 1 18em;
	flex: 1 1 18em;
	padding: 0 1rem;
	align-items: center;
	-webkit-order: 1;
	-ms-order: 1;
	order: 1;
}



/*
    Media queries for adding style to specific sizes. Here, apply the style if the window is greater than 40em
*/

@media (max-width: 813px)
{
	.box
	{
		flex-direction: column;
	}

	.box-item-image
	{
		-webkit-order: 1;
		-ms-order: 1;
		order: 1;
		max-width: 100%;
		max-height: 100%;
		align-items: center;
	}

	.box-item-image2
	{
		-webkit-order: 1;
		-ms-order: 1;
		order: 1;
		max-width: 100%;
		max-height: 100%;
		align-items: center;
	}

}




